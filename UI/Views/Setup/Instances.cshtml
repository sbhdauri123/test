﻿@{
    ViewBag.Title = "Instance Setup";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="dragoMain" id="userTableContainer">
    <div id="gridContainer" class="toolControlContainer tc-Main">
        <header>
            <h2>Instance Setup</h2>
        </header>
        <div id="kGrid" class="toolControl">
        </div>
    </div>
</div>

<script src="~/Scripts/Greenhouse/common.js"></script>
<script type="text/javascript">

    $(function ()
    {
        //var instanceHub = $.connection.instanceHub;

        var url = "/instanceHub";

        var instanceHub = new signalR.HubConnectionBuilder()
            .withUrl(url, {
                transport: signalR.HttpTransportType.LongPolling
            })
            .build();

        //async function start() {
        //    try {
        //        await serverHub.start();
        //        console.log("serverHub Connected.");
        //    } catch (err) {
        //        console.log(err);
        //        setTimeout(start, 5000);
        //    }
        //};

        //serverHub.onclose(async () => {
        //    await start();
        //});

        // Start the connection.
        var hubStart = instanceHub.start();

        var dsCountries = GetDataSource("GetCountries", "CountryID", "CountryName");
        dsCountries.fetch();

        var dsMasterAgencies = GetDataSource("GetMasterAgencies", "MasterAgencyID", "MasterAgencyCode");
        dsMasterAgencies.fetch();

        var tplData = kendo.template($("#tplDataDisplayName").html());
        var tplcheck = kendo.template($("#tplCheck").html());


        $("#kGrid").kendoGrid({
            dataSource: InstanceDataSource()
            //, autoBind: false
            , columns: [
                {
                    command: [
                        { name: "edit", text: "", template: "<a class='btn-small lnkEdit'><i class='fa fa-pencil-square-o grid-edit-link'></i></a>", width: 10 }
                      , { name: "destroy", template: "<a class='btn-small lnkDelete'><i class='fa fa-times grid-edit-link'></i></a>", text: "", width: 10 }
                    ]
                     , width: 120
                     , title: "<button id='btnAdd' class='btn btn-primary'>Add Instance</button>", menu: false
                }
				 , { field: "InstanceName", title: "Instance Name", width: "180px" }
                 , { field: "EMRClusterId", title: "EMRClusterId", width: "180px" }
                 , { field: "UserID", title: "UserID", width: "180px" }
                 , { field: "CountryID", title: "Country", width: "120px", template: "#=fnTemplateData('dsCountries', CountryID) #", filterable: { ui: countriesFilter } }
                 , { field: "MasterAgencyID", title: "Master Agency", width: "155px", template: "#=fnTemplateData('dsMasterAgencies', MasterAgencyID) #", filterable: { ui: masterAgenciesFilter } }
                 , { field: "AuthToken", title: "Auth. Token", width: "155px"}
                 , {
                     field: "isActive", title: "Active?", template: '#=fnTemplateCheck(isActive)#', width: "100px", filterable: {
                         multi: true, checkAll: false, itemTemplate: function (ee) {
                             return "<div><input type='checkbox' name='rb" + ee.field + "' value='#=data.isActive#'/># if(data.isActive) {# <i class='icon-ok'/> #}else{# <i class='icon-remove'/>#}#</div>";
                         }
                     }
                 }
               //, { field: "CreatedDate", title: "Created", template: "#=kendo.toString(CreatedDate, 'G')#", width: "200px" }
               , { field: "LastUpdated", title: "Last Updated", template: "#=kendo.toString(LastUpdated, 'G')#", width: "200px" }
            ]
            , editable: {
                mode: "popup"
                       , edit: true
                       , destroy: true
                       , create: true
                       , confirmation: "Are you sure you want to delete this?"
                       , template: $("#tplinstance").html()
            }
            , dataBound: OnGridDataBind
            , edit: function (evt) {
                var container = evt.container;
                container.width("470").height("560");

                var win = container.data("kendoWindow");
                win.center();
                var title = (evt.model.InstanceName == "") ? "Add New Instance" : "Editing [" + evt.model.InstanceName + "]";
                win.title(title);

                var ddlCountries = container.find("#CountryID");
                ddlCountries.kendoDropDownList({
                    dataSource: dsCountries
                    //, autoBind:false
                    , dataTextField: "Name"
                    , dataValueField: "ID"
                    , optionLabel: "--Select a Country--"
                });

                var ddlmasterAgencies = container.find("#MasterAgencyID"); //
                ddlmasterAgencies.kendoDropDownList({
                    dataSource: dsMasterAgencies
                    , dataTextField: "Name"
                    , dataValueField: "ID"
                    , optionLabel: "--Select a Master Agency--"
                });

                SetValidation(container);

                evt.container.find(".k-grid-cancel").on("click", function (e) {
                    evt.sender.cancelChanges();
                });
            }
            , save: function (evt)
            {
                var container = evt.container;
                var validator = container.find(".lyrEdit").data("kendoValidator");
                if (!validator.validate())
                    evt.preventDefault();

                var isActive = container.find("#isActive").prop("checked");
                if (evt.model.IsActive != isActive) {
                    evt.model.IsActive = isActive;
                    evt.model.dirty = true;
                }
            }
           , sortable: { mode: "multiple" }
           , columnMenu: gridColumMenuOptions
           , filterable: gridFilterOptions
           , resizable: true
           , pageable: true
           , scrollable: true
           
        }).data("kendoGrid")
        .wrapper.height("600px");

        function InstanceDataSource()
        {
        	return new kendo.data.DataSource({
        		type: "signalr",
        		autoSync: false,
                transport: {
                	signalr: {
                		promise:hubStart,//mainHub.ConnectionHub.start() ,
                		hub: instanceHub,
                		server: {
                		    read: "read"
							, create: "create"
							, destroy: "destroy"
							, update: "update"
                		},
                		client: {
                			read: "read"
							, create: "create"
							, destroy: "destroy"
							, update: "update"
                		}
                	},
                	parameterMap:function(option,type)
                	{
                		if (type === "create")
                		{
                			//option.GUID = kendo.guid();
                		}else if (type === "destroy")
                		{
                		    //option.SettingsFields = option.SettingsFields.split(",");
                		    //option.SourceFileMetadataFields = option.SourceFileMetadataFields.split(",");
                		    //option.CustomPropertiesFields = option.CustomPropertiesFields.split(",");

                		}
                		return option;
                	}
                }//end transport
               , schema: {
                   model: {
                       id: "InstanceID"
                       , fields: {
                           InstanceID: { type: "number" }
                           , InstanceName: { type: "string" }
                           , EMRClusterId: { type: "string" }
                           , UserID: { type: "string" }
                           , CountryID: { type: "number" }
                           , MasterAgencyID: { type: "number" }
                           , AuthToken: { type: "string" }
                           , isActive: { type: "boolean" }
                           , isPM: { type: "boolean"}
                           //, CreatedDate: { type: "date", format: "MM/dd/yyyy" }
                           , LastUpdated: { type: "date", format: "MM/dd/yyyy", parse: function (value) { return parseUTCDate(value) } }
                       }
                   }
                   , total: function (data) { return data.length; }
               }
               , requestEnd: function (e) {
                   kendo.ui.progress($(".k-grid"), false);
               }
               , requestStart: function (e) {
                   kendo.ui.progress($(".k-grid:visible"), true);
               }
               , serverPaging: false
               , serverSorting: false
               , serverFiltering: false
               , pageSize: 20
               , error: function (e) {
                   if (e.xhr.toString().indexOf("Error: The DELETE") != -1) {
                       //http://www.telerik.com/forums/rows-disappeared-from-grid-on-delete-fail
                       $("#kGrid").data("kendoGrid").cancelChanges();
                       alert("This record can not be deleted because there are associated elements. Please delete all associated elements first.");
                   }
               }
            });//end dataSource
        }//end DataSource()

        function SetValidation(container)
        {
            var validator = container.find(".lyrEdit").kendoValidator({
                rules: {
                    required: function (input)
                    {
                        if (input.is("[class*='required']"))
                        {
                            if (!$.trim(input.val()))
                                return false;
                            return true;
                        }
                        return true;
                    }
                }//end rules
                , messages: {
                    required: "* required"
                }
                , validateOnBlur: false
            });
        }

        function countriesFilter(ele) {
            ele.kendoDropDownList({
                dataSource: dsCountries
               , dataTextField: "Name"
               , dataValueField: "ID"
               , optionLabel: "--Select--"
            }).data("kendoDropDownList").wrapper.width("250px");
        }

        function masterAgenciesFilter(ele) {
            ele.kendoDropDownList({
                dataSource: dsMasterAgencies
               , dataTextField: "Name"
               , dataValueField: "ID"
               , optionLabel: "--Select--"
            }).data("kendoDropDownList").wrapper.width("250px");
        }

        fnTemplateData = function (dsName, idField) {
            var ds = eval(dsName);
            var htm = tplData({ DataSource: ds.data(), ID: idField });
            return htm;
        }

        fnTemplateCheck = function (value) {
            //var isChecked = (value == 0);
            var htm = tplcheck({
                Val: value //isChecked
            });
            return htm;
        }

    });

</script>

<script id="tplinstance" type="text/x-kendo-template">
    <div id='lyrEdit' class="lyrEdit">

        <div class="control-group">
            <label for="InstanceName" class="control-label">Instance Name:</label>
            <div class="controls"><input type="text" id="InstanceName" style="width: 400px; height:34px" class="required form-control" name="InstanceName" data-bind="value: InstanceName" /></div>
        </div>
        <div class="control-group">
            <label for="EMRClusterId" class="control-label">EMRClusterId:</label>
            <div class="controls"><input type="text" id="EMRClusterId" style="width: 400px; height:34px" class="required form-control" name="EMRClusterId" data-bind="value: EMRClusterId" /></div>
        </div>
        <div class="control-group">
            <label for="UserID" class="control-label">UserID:</label>
            <div class="controls"><input type="text" id="UserID" style="width: 400px; height:34px" class="required form-control" name="UserID" data-bind="value: UserID" /></div>
        </div>
        <div class="control-group">
            <label for="CountryID" class="control-label">Country:</label>
            <div class="controls"><input id="CountryID" style="width:430px" class="required" name="CountryID" data-bind="value: CountryID" /></div>
        </div>
        <div class="control-group">
            <label for="MasterAgencyID" class="control-label">Master Agency:</label>
            <div class="controls"><input id="MasterAgencyID" style="width:430px" class="required" name="MasterAgencyID" data-bind="value: MasterAgencyID" /></div>
        </div>
        <div class="control-group">
            <label for="AuthToken" class="control-label">Auth. Token:</label>
            <div class="controls"><input type="text" id="AuthToken" style="width: 400px; height:34px" class="form-control" name="AuthToken" data-bind="value: AuthToken" /></div>
        </div>
        <div class="control-group">
            <label for="isActive" class="control-label">Active?</label>
            <div class="controls"><input type="checkbox" id="isActive" style="width:20px;text-align:left" name="isActive" data-bind="checked: isActive" /></div>
            @*<div class="controls"><input type="checkbox" id="IsActive" style="width:20px;text-align:left" name="IsActive" data-bind="value: IsActive" data-role="checkbox" tabindex="9" /></div>*@
        </div>

    </div>
</script>

@*<script id="tplCheck" type="text/x-kendo-template">
        #
        var iconClass = "icon-ok";
        if(!Val) {
        iconClass = "icon-remove";
        }
        #
        <div style='text-align:center'><i class="#=iconClass#">&nbsp;</i></div>
    </script>*@

<script id="tplCheck" type="text/x-kendo-template">
    #
    var iconClass = "glyphicon glyphicon-ok green";
    if(!Val) {
    iconClass = "glyphicon glyphicon-remove red";
    }
    #
    <div style='text-align:center'><i class="#=iconClass#">&nbsp;</i></div>
</script>

<script id="tplDataDisplayName" type="text/x-kendo-template">
    <div>
        # var obj = $.grep(DataSource, function(ele,id){return ele.ID == ID});
        if(obj.length == 1){
        #
        #=obj[0].Name#
        #}#
    </div>
</script>
