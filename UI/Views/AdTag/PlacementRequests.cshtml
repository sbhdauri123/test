@{
    ViewBag.Title = "Placement Requests";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="dragoMain" id="userTableContainer">
    <div id="gridContainer" class="toolControlContainer tc-Main">
        <header>
            <h2>Placement Requests</h2>            
            <div id="ddlDataSources"></div>
        </header>
        <div id="kGrid" class="toolControl">
        </div>
    </div>
</div>

@section scripts
{
<script src="~/Scripts/Greenhouse/common.js"></script>
<script type="text/javascript">   
    $(function ()
    {
        // ===========================================================================================================================================================
            	
    	var placementRequestHub = $.connection.placementRequestHub;
    	var tplstatus = kendo.template($("#tplStatus").html());

        var ddlDataSources = $("header").find("#ddlDataSources").kendoDropDownList({
            dataSource: GetDataSource("GetAllAdvertisers", "DDLKey", "AdvertiserName")
            , dataTextField: "Name"
            , dataValueField: "ID"
            , optionLabel: "--Select Advertiser--"
            , change: function ()
            {
                var val = this.value().split('~!~')[0];
                if (val === '0')
                {
                    grid.destroy();
                    createGrid();
                    grid.dataSource.read({ data: val });
                    grid.thead.show();
                    $("#btnAdd").hide();
                }
                else
                {
                    if (val) {
                        grid.destroy();
                        createGrid();
                        grid.dataSource.read({ data: val });
                        $("#btnAdd").show();
                        grid.thead.show();
                    }
                    else {
                        grid.thead.hide();
                        grid.dataSource.data([]);
                    }
                }

            }
        }).data("kendoDropDownList");
        ddlDataSources.list.css("min-width", "250px");
        ddlDataSources.list.width("auto");

        // ===========================================================================================================================================================

        var grid, createGrid = function () {

            grid = $("#kGrid").kendoGrid({
                dataSource: PlacementRequestsDataSource()
            , autoBind: false
            , columns: [
                {
                    width: "120px"
                    , title: "<button id='btnAdd' class='btn btn-primary'>Add Request</button>"
                },
               { hidden: true, field: "PlacementRequestID" }
               , {
                   field: "AdvertiserName", width: "300px"
                   //, editor: function (element, options) { element.text(options.model.AdvertiserName) }
                   , filterable: { ui: advertiserFilter }
                   , title: "Advertiser Name"
               }
               //, { field: "AdvertiserID", title: "Advertiser ID", width: "100px", filterable: false }
               //, { field: "AdVendorName", title: "AdVendor Name", width: "100px", filterable: false }
               , { field: "Status", title: "Status", width: "100px", template: '#=fnTemplateStatus(Status)#', filterable: { ui: statusFilter } }
               , { field: "PlacementsRequested", title: "Placements Requested", width: "300px", filterable: false }
               , { field: "RequestedBy", title: "Requested By", width: "150px", filterable: { ui: requestedByFilter } }
               , { field: "CreatedDate", title: "Requested Date", width: "200px", template: "#=kendo.toString(CreatedDate, 'G')#", filterable: false }
            ]
            , editable: {
                mode: "popup"
                , edit: true
                , create: true
                , template: $("#placementRequestTemplate").html()
            }
            , dataBound: OnGridDataBind
            , edit: function (evt) {
                //Passing the selected DataSource Value (AdvertiserID) to the model.
                
                evt.model.AdvertiserID = ddlDataSources.value().split('~!~')[0];
                evt.model.AdVendorName = ddlDataSources.value().split('~!~')[1];

                onEdit(evt);

                var container = evt.container;
                container.width("450").height("360");

                var win = container.data("kendoWindow");
                win.center();
                var title = (evt.model.AdvertiserName == "") ? "Add New Request" : "Editing [" + evt.model.AdvertiserName + "]";
                //console.log("title", title);
                win.title(title);

                SetValidationAdvertiser(container);
                win.center().open();
            }
            , save: function (evt) {

                var container = evt.container;
                var validator = evt.container.find(".lyrEdit").data("kendoValidator");
                if (!validator.validate())
                    evt.preventDefault();

                //evt.model.IsOutputToReport = container.find('#isOutputToReport').prop("checked");
                //evt.model.WriteToReportStatus = container.find('#writeToReportStatus').prop("checked");

                //check if the row is being edited and not newly added
                //if (! evt.model.isNew())
                //{
                //    if (! confirm("Are you really sure that you want to update the data ?")) 
                //    {
                //        //In the confirm box, if the user clicks no or cancel, then do not proceed with the updation of record
                //        e.preventDefault();
                //    }
                //}
            }
           , sortable: { mode: "multiple" }
           , filterable: {
               extra: false,
               operators: {
                   string: {
                       contains: "Contains",
                       eq: "Is equal to",
                       neq: "Is not equal to"
                   }
               }
           }
           , resizable: true
           , pageable: true
           , scrollable: true
            }).data("kendoGrid");
        };

        createGrid();

        grid.wrapper.height("570px");
        grid.thead.hide(); //hide grids columns on initial load

        // Used to make AdvertiserName non-editable
        function onEdit(e) {
            //if (e.model.APIAdServerRequestID !== 0)
            $("#adVendorName").attr("readonly", true);
            $("#adVendorName").val(e.model.AdVendorName);
        }

        // ===========================================================================================================================================================

        function SetValidationAdvertiser(container) {
            var validator = container.find("#lyrEditRequest").kendoValidator({
                rules: {
                    required: function (input) {
                        if (input.is("[class*='required']")) {
                            if (!$.trim(input.val()))
                                return false;
                            return true;
                        }
                        return true;
                    },
                    urlvalid: function (input) {
                        if (input.is("[class*='urlvalid']")) {
                            if (!ValidUrl(input.val()))
                                return false;
                            return true;
                        }
                        return true;
                    }
                }//end rules
                , messages: {
                    required: "* required",
                    urlvalid: "* check url"
                }
                , validateOnBlur: false
            });
        }

        function PlacementRequestsDataSource() {
            return new kendo.data.DataSource({
                type: "signalr",
                autoSync: false,
                transport: {
                    signalr: {
                        promise: mainHub.ConnectionHub.start(),
                        hub: placementRequestHub,
                        server: {
                            read: "readAll"
			                , create: "processPlacementRequest"
			                , update: "processPlacementRequest"
                        },
                        client: {
                            read: "readAll"
			                , create: "processPlacementRequest"
			                , update: "processPlacementRequest"
                        }
                    }
                    , parameterMap: function (option, type) {
                        if (type != "read") {
                            if (type == "create") {
                                option.GUID = kendo.guid();
                            }
                        }
                        else {
                            if (option.data != null)
                                option = option.data.toString(); //data set by source dropdown, and controller expecting param strings[]
                        }
                        return option;
                    }
                },
                schema: {
                    model: {
                        id: "PlacementRequestID",
                        fields: {
                            PlacementRequestID: { type: "number" }
                            , AccountID: { type: "Number" }
                            , AdvertiserID: { type: "Number" }
                            , AdvertiserName: { type: "string" }
                            , AdVendorName: { type: "string" }
                            , ProfileID: { type: "Number" }
                            , Status: { type: "string" }
                            , StatusSortOrder: { type: "number" }
                            , PlacementsRequested: { type: "string" }
                            , RequestedBy: { type: "string" }
                            , CreatedDate: { type: "date", format: "MM/dd/yyyy", parse: function (value) { return parseUTCDate(value) } }
                            , LastUpdated: { type: "date", format: "MM/dd/yyyy", parse: function (value) { return parseUTCDate(value) } }
                        }
                    }
                }
                , requestEnd: function (e) {
                    kendo.ui.progress($(".k-grid"), false);
                }
                , requestStart: function (e) {
                    kendo.ui.progress($(".k-grid:visible"), true);
                }
                , serverPaging: false
                , serverSorting: false
                , serverFiltering: false
                , pageSize: 20
                , error: function (e) {
                    //http://www.telerik.com/forums/rows-disappeared-from-grid-on-delete-fail
                    $("#kGrid").data("kendoGrid").cancelChanges();
                    //alert("Error...");
                }
            });//end dataSource
        }//end DataSource()

        function advertiserFilter(element) {
            var ds = filterGridData('AdvertiserName');
            element.kendoComboBox({
                dataSource: ds
                , placeholder: "--Select an Advertiser--"

            });
        }

        function statusFilter(element) {
            var ds = filterGridData('Status');

            element.kendoComboBox({
                dataSource: ds
                , placeholder: "--Select a Status--"

            });
        }

        function requestedByFilter(element) {
            var ds = filterGridData('RequestedBy');

            element.kendoComboBox({
                dataSource: ds
                , placeholder: "--Select a Requestor--"

            });
        }

        function filterGridData(field) {
            var ds = $.unique(grid.dataSource.data().map(function getValues(obj, indx) {
                return obj[field];
            }).sort(function sortFilteredData(str1, str2) {
                var a, b;
                if (Boolean(str1) && Boolean(str2)) {
                    a = str1.toLowerCase(); b = str2.toLowerCase();
                }
                else { a = ""; b = ""; }
                return a < b ? -1 : a > b ? 1 : 0;
            }));
            return ds;
        }

        fnTemplateStatus = function (value) {
            var htm = tplstatus({
                Val: value
            });
            return htm;
        };

    });

</script>
}
<script>
        function validateKey(event) {
            var key = window.event ? event.keyCode : event.which;
            
            if ( (event.keyCode >= 43 && event.keyCode <= 45) 
                || event.keyCode == 8 || event.keyCode == 32 
                || event.keyCode == 37 || event.keyCode == 39
                || event.keyCode == 59) {
                return true;
            }
            else if (key < 48 || key > 57) {
                return false;
            }
            else return true;
        };
</script>

<script id="placementRequestTemplate" type="text/x-kendo-template">

    <div id='lyrEditRequest' class="lyrEdit">
        <div class="control-group">
            <label for="adVendorName" class="control-label" style="width:200px;">Ad Server Name:</label>
            <div class="controls"><input type="text" class="required form-control" id="adVendorName" style='width:380px;' maxlength="255" name="adVendorName" data-bind="value:AdVendorName" /></div>
        </div>
        @*<div class="control-group">
            <label for="advertiserID" class="control-label" style="width:200px;">Advertiser ID:</label>
            <div class="controls"><input type="text" class="required form-control" id="advertiserID" style='width:380px;' maxlength="255" name="advertiserID" data-bind="value:AdvertiserID" /></div>
        </div>
        <div class="control-group">
            <label for="advertiserName" class="control-label" style="width:200px;">Advertiser Name:</label>
            <div class="controls"><input type="text" class="required form-control" id="advertiserName" style='width:380px;' maxlength="255" name="advertiserName" data-bind="value:AdvertiserName" /></div>
        </div>
        <div class="control-group">
            <label for="adVendorName" class="control-label" style="width:200px;">AdVendor Name:</label>
            <div class="controls"><input type="text" class="required form-control" id="adVendorName" style='width:380px;' maxlength="255" name="adVendorName" data-bind="value:AdVendorName" /></div>
        </div>*@
        <div class="control-group">
            <label for="placementsRequested" class="control-label" style="width:200px;">Placements Requested:</label>
            <div class="controls"><input type="text" class="required form-control" id="placementsRequested" style='width:380px;' maxlength="255" name="placementsRequested" data-bind="value:PlacementsRequested" onkeypress="return validateKey(event);" />
            Enter each Placement ID separated by a comma "," or enter a range of Placements. For example, 123, 456, 250-280, 897</div>
        </div>
    </div>    
</script>   

<style>
    #kGrid.k-grid td .DataStatus {
        color: red;
    }

        #kGrid.k-grid td .DataStatus.Complete {
            color: black;
        }

        #kGrid.k-grid td .DataStatus.Running {
            color: green;
        }

        #kGrid.k-grid td .DataStatus.Pending, #grid.k-grid td .DataStatus.Throttled {
            color: #990;
        }

    a.k-button.k-button-icontext.k-grid-details {
        min-width: 0;
        background-color: transparent;
        border-style: none;
    }

        a.k-button.k-button-icontext.k-grid-details:active {
            /*border-style: outset;
        border: none;*/
        }
</style>

<script id="tplStatus" type="text/x-kendo-template">
    <span class="DataStatus #= Val #">#=Val#</span>
</script>

<script>
    function trimText(txt, len) {
        if (!txt)
            return '';
        if (txt.length > len)
            return txt.substring(0, len) + '...';
        else
            return txt;
    }
</script>

